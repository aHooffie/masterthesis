game Mind

typedef Value = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10,
				11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
				21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
				31, 32, 33, 34, 35, 36, 37, 38, 39,	40,
				41, 42, 43, 44, 45, 46, 47, 48, 49, 50,
				51, 52, 53, 54, 55, 56, 57, 58, 59, 60,
				61, 62, 63, 64, 65, 66, 67, 68, 69, 70,
				71, 72, 73, 74, 75, 76, 77, 78, 79, 80,
				81, 82, 83, 84, 85, 86, 87, 88, 89, 90,
				91, 92, 93, 94, 95, 96, 97, 98, 99, 100]

deck allCards = 
[
	n1 = [1],
	n2 = [2],
	n3 = [3],
	n4 = [4],
	n5 = [5],
	n6 = [6],
	n7 = [7],
	n8 = [8],
	n9 = [9],
	n10 = [10],
	n11 = [11],
	n12 = [12],
	n13 = [13],
	n14 = [14],
	n15 = [15],
	n16 = [16],
	n17 = [17],
	n18 = [18],
	n19 = [19],
	n20 = [20],
	n21 = [21],
	n22 = [22],
	n23 = [23],
	n24 = [24],
	n25 = [25],
	n26 = [26],
	n27 = [27],
	n28 = [28],
	n29 = [29],
	n30 = [20],
	n31 = [31],
	n32 = [32],
	n33 = [33],
	n34 = [34],
	n35 = [35],
	n36 = [36],
	n37 = [37],
	n38 = [38],
	n39 = [39],
	n40 = [40],
	n41 = [41],
	n42 = [42],
	n43 = [43],
	n44 = [44],
	n45 = [45],
	n46 = [46],
	n47 = [47],
	n48 = [48],
	n49 = [49],
	n50 = [50]
] deckPile none []

deck playerA = [] handplayerA hand []
deck playerB = [] handplayerB hand []
deck playerC = [] handplayerC hand []
deck discardPile = [] table all []
players = [A,B,C]
team allPlayers = [A, B, C]

tokens = [ lives = [3] table all use [] ]

rules = [
	scoring = [Value = 1],
	players = 2 to 5
]

gameflow = [ 
	turnorder = []
	stage firstdeal = dealer [req distribute 1 deckPile [A, B, C]],
	stage firstplay = 
		while playerA.size != 0 && playerB.size != 0 && playerC.size != 0 && lives.value != 0
		all
		[opt takeCard playerA discardPile,
		opt takeCard playerB discardPile,
		opt takeCard playerC discardPile]  
	,
	stage seconddeal =
		while lives.value != 0 
		dealer [ distribute 3 deckPile [A, B, C]],
	stage secondplay = 
		while playerA.size != 0 && playerB.size != 0 && playerC.size != 0 && lives.value != 0
		all
		[opt takeCard playerA discardPile,
		opt takeCard playerB discardPile,
		opt takeCard playerC discardPile] 
	,
	stage thirddeal = 
		lives.value != 0
		dealer [req distribute 5 deckPile [A, B, C]],
	stage thirdplay = 
		while playerA.size != 0 && playerB.size != 0 && playerC.size != 0 && lives.value != 0
		all
		[opt takeCard playerA discardPile,
		opt takeCard playerB discardPile,
		opt takeCard playerC discardPile]  
	,
	stage end = 
		all [req endGame]
]